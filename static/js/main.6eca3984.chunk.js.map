{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toUTCString","slice","timerTime","this","window","setInterval","currentTime","setState","console","info","prevProps","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","timerName","handleDocumentContextmenu","event","preventDefault","handleDocumentClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAyB,CACvBC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAF/C,EAKEC,UAAY,EALd,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,UAAYE,OAAOC,aAAY,WAClC,IAAMC,GAAc,IAAIP,MAAOC,cAAcC,OAAO,IAAK,GAEzD,EAAKM,SAAS,CAAET,KAAMQ,IACtBE,QAAQC,KAAK,EAAKZ,MAAMC,QACvB,OAbP,gCAgBE,SAAmBY,GACjB,IAAQC,EAASR,KAAKS,MAAdD,KAEJA,IAASD,EAAUC,MACrBH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDA,MApBzD,kCAwBE,WACEP,OAAOU,cAAcX,KAAKD,aAzB9B,oBA4BE,WACE,IAAQS,EAASR,KAAKS,MAAdD,KACAb,EAASK,KAAKN,MAAdC,KAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGjB,WAzCX,GAA2BkB,aCPpB,SAASC,IACd,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWnB,OAAO,GAE3C,MAAM,SAAN,OAAgBiB,GAQX,IAAMG,EAAb,4MACExB,MAAyB,CACvByB,UAAW,UACXC,UAAU,GAHd,EAMEC,UAAY,EANd,EAuBEC,0BAA4B,SAACC,GAC3BA,EAAMC,iBACN,EAAKpB,SAAS,CAAEgB,UAAU,KAzB9B,EA4BEK,oBAAsB,WACpB,EAAKrB,SAAS,CAAEgB,UAAU,KA7B9B,uDAQE,WAA2B,IAAD,OACxBM,SAASC,iBAAiB,QAAS3B,KAAKyB,qBACxCC,SAASC,iBAAiB,cAAe3B,KAAKsB,2BAE9CtB,KAAKqB,UAAYpB,OAAOC,aAAY,WAClC,EAAKE,SAAS,CAAEe,UAAWL,QAC1B,QAdP,kCAiBE,WACEY,SAASE,oBAAoB,QAAS5B,KAAKyB,qBAC3CC,SAASE,oBAAoB,cAAe5B,KAAKsB,2BACjDrB,OAAOU,cAAcX,KAAKqB,aApB9B,oBAgCE,WACE,MAAgCrB,KAAKN,MAA7ByB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GAAa,cAAC,EAAD,CAAOZ,KAAMW,WAtCnC,GAAyBN,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.6eca3984.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype State = {\n  time: string,\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerTime = 0;\n\n  componentDidMount() {\n    this.timerTime = window.setInterval(() => {\n      const currentTime = new Date().toUTCString().slice(-12, -4);\n\n      this.setState({ time: currentTime });\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    const { name } = this.props;\n\n    if (name !== prevProps.name) {\n      console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerTime);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nexport function getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerName = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('click', this.handleDocumentClick);\n    document.addEventListener('contextmenu', this.handleDocumentContextmenu);\n\n    this.timerName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('click', this.handleDocumentClick);\n    document.removeEventListener('contextmenu', this.handleDocumentContextmenu);\n    window.clearInterval(this.timerName);\n  }\n\n  handleDocumentContextmenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleDocumentClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (<Clock name={clockName} />)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}